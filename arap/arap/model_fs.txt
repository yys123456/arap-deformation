#version 450 core
layout( location = 0 ) out vec4 color;

in vec3 FragPos;
in vec3 Normal;

uniform vec3 ViewPos;

vec3 Lighting(){
	vec3 lightPos = ViewPos;
	vec3 lightColor = vec3(2, 2, 2);
	vec3 norm = normalize(Normal);
	vec3 lightDir = normalize(lightPos - FragPos);
	vec3 viewDir = normalize(ViewPos - FragPos);
	vec3 reflectDir = reflect(-lightDir, norm);  

	float diff = max(dot(norm, lightDir), 0.0);
	vec3 diffuse = diff * lightColor;

	float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32);
	vec3 specular = 0.5 * spec * lightColor;  

	vec3 result = (vec3(1, 1, 1) + diffuse + specular) * vec3(30 ,49, 36) / 255.0;
	return result;
}

void main(){
	color = vec4(Lighting(), 1.0);
}